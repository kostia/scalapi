= Scalarium Connector

Library to interact with the Scalarium API.

== Simple Example

    require 'scalapi'

    # setup your configuration
    Scalapi.configure do |config|
      config.token = "your scalarium token"
    end

    # get a "default" scalarium - using your configuration
    root = Scalapi.scalarium

    # get all clouds
    clouds = root.clouds

    # get the applications of a cloud
    cloud = clouds.first
    first_cloud_applications = cloud.applications

    # create a new cloud
    new_cloud = root.create_cloud({...})


== Extended Example (using two tokens)

    require 'scalapi'

    # setup the default token
    Scalapi.configure do |config|
      config.token = "default scalarium token"
    end

    standard_configuration = Scalapi::Configuration.configuration

    # create a new configuration with fallback to the standard (by reference, not copy)
    extended_configuration = Scalapi::Configuration.new(standard_configuration)

    # setup a different api token and setup logging for all invocations of <resource>."get"
    extended_configuration.configure do |config|
      config.token = "different token"
      config.trace = [:get]
    end

    # the top level scalarium bound to the default token
    default_scalarium = Scalapi.scalarium # same as Scalapi.bind(standard_configuration)

    # the (other) top level scalarium bound to the different token
    the_other_scalarium = Scalapi.bind(extended_configuration)

== ChangeLog

=== 0.0.4

- uses new MultiJson API when available (less noisy deprecation warnings)

=== 0.0.3

- added resource model: Credentials

